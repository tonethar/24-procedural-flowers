{"version":3,"file":"./bundle.js","mappings":"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AEb,IAAI,CAACjC,CAAC,EAAE;MACR,IAAI,CAACoD,CAAC,IAAI,IAAI,CAACC,MAAM;MACrB,IAAI,CAACpD,UAAU,IAAI,IAAI,CAACqD,eAAe;MACvC,IAAI,CAACG,SAAS,IAAI,IAAI,CAACF,cAAc;MACrC,IAAI,CAACoE,QAAQ,IAAI,IAAI,CAACvJ,aAAa;IAErC;EAAC;AAAA,EA5D0BkI,kDAAM;AACjC;AACF;AACA;AAFEmC,eAAA,CADIrB,cAAc,eAIC,EAAE;AA2DvB,iEAAeA,cAAc;;;;;;;;;;AC/E7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMsB,UAAU,GAAG,SAAbA,UAAUA,CAAIrH,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,KAAK,EAAK;EACtDJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACVL,GAAG,CAACM,SAAS,GAAGF,KAAK;EACrBJ,GAAG,CAACO,SAAS,CAAC,CAAC;EACfP,GAA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","sources":["webpack://prodedural-flowers/./src/app-defaults.js","webpack://prodedural-flowers/./src/app-petal-color-functions.js","webpack://prodedural-flowers/./src/app-petal-draw-functions.js","webpack://prodedural-flowers/./src/app-state.js","webpack://prodedural-flowers/./src/app-ui.js","webpack://prodedural-flowers/./src/classes/Flower.js","webpack://prodedural-flowers/./src/classes/RotatingFlower.js","webpack://prodedural-flowers/./src/types/IAppDefaults.js","webpack://prodedural-flowers/./src/types/IFlowerParams.js","webpack://prodedural-flowers/./src/types/IFlowerPetal.js","webpack://prodedural-flowers/./src/types/IFlowerPetalDrawFunc.js","webpack://prodedural-flowers/./src/types/IPoint.js","webpack://prodedural-flowers/./src/types/IUICallbacks.js","webpack://prodedural-flowers/./src/utils/utils-canvas.js","webpack://prodedural-flowers/./src/utils/utils.js","webpack://prodedural-flowers/webpack/bootstrap","webpack://prodedural-flowers/webpack/runtime/compat get default export","webpack://prodedural-flowers/webpack/runtime/define property getters","webpack://prodedural-flowers/webpack/runtime/hasOwnProperty shorthand","webpack://prodedural-flowers/webpack/runtime/make namespace object","webpack://prodedural-flowers/./src/app-main.js"],"sourcesContent":["// @ts-check\nimport { colorFunctionKeys} from \"./app-petal-color-functions.js\";\nimport { drawFunctionKeys } from \"./app-petal-draw-functions.js\";\nimport \"./types/IAppDefaults.js\";\n\n/**\n * @module app-defaults\n * @desc Default values for app. Contains `IAppDefaults` interface and `DEFAULTS` object literal.\n * @author TJ\n */\n\n/** \n * @name appDefaults\n * @type {IAppDefaults}\n * @desc The app's default values.\n * @static\n */\nconst appDefaults = Object.freeze({\n  canvasWidth:              800,\n  canvasHeight:             600,\n  clearColor:               \"#000\",\n  deltaRotation:            .01,\n  fps:                      60,\n  maxFlowers:               12,\n  maxPetals:                1200,\n  minFlowerOpacity:         .15,\n  randomDivergenceValues:   [30, 60, 72, 90, 120, 137.1, 137.3, 137.5, 137.7, 137.9, 139, 140,],\n  randomFlowerDelay:        8000,\n  randomFlowerPadding:      100,\n  uiC:                      5,\n  uiCDeltaValues:           [-.001, 0, .002, .005, .01, .02,],\n  uiClearEveryFrame:        true,\n  uiColorFunctionValues:    colorFunctionKeys(),\n  uiCValues:                [2, 3, 4, 5, 8, 10,],\n  uiDeltaC:                 .002,\n  uiDeltaDivergence:        0,\n  uiDeltaPetalSize:         .01,\n  uiDivergence:             137.5,\n  uiDivergenceDeltaValues:  [-.005, -.002, -.001, 0, .001, .002, .005,],\n  uiDivergenceValues:       [30, 60, 72, 90, 120, 137.1, 137.3, 137.5, 137.7, 137.9, 139, 140,],\n  uiDrawFunctionValues:     drawFunctionKeys(),\n  uiPetalColorFunctionName: \"increase-hue-each-petal\",\n  uiPetalSize:              3,\n  uiPetalSizeDeltaValues:   [0, .01, .02, .05, .25,],\n  uiPetalSizeValues:        [1, 2, 3, 5, 8, 10,],\n  uiPetalDrawFunctionName:  \"Disc\",\n  uiRandomFlowers:          true,\n});\n\nexport default appDefaults;\n        ","// @ts-check\n\nimport { randomArrayElement } from \"./utils/utils.js\";\n\n/**\n * @module app-color-functions\n * @desc Functions for determining color of petal.\n * @author TJ\n */\n\n/* PETAL COLOR FUNCTION DEFINITIONS */\n/**\n * @name petalColorFunc1\n * @desc RGB red value increases with age (`n`) of petal.\n * @function {FlowerPetalColorFunc}\n * @param {number} n \n * @param {number} divergence \n * @returns {string}\n */\n//const petalColorFunc1 = (n, divergence) => `rgb(${n % 256},${(n % 256)/2},${128 - (n % 256)/2})`; \nconst petalColorFunc1 = (n, divergence) => `rgb(${255-(n % 256)},${255-(n % 256)/2},${128 - (n % 256)/2})`; \n\n/**\n * @name petalColorFunc2\n * @desc RGB `red` value increases with accumulated rotation of petal.\n * @function {FlowerPetalColorFunc}\n * @param {number} n \n * @param {number} divergence \n * @returns {string}\n */\nconst petalColorFunc2 = (n, divergence) => {\n  const aDegrees = (n * divergence) % 256;\n  return `rgb(${aDegrees},64,${(n%255)*2})`;\n};\n\n/**\n * @name petalColorFunc3\n * @desc HSL `hue` value increases with accumulated rotation of petal.\n * @function {FlowerPetalColorFunc}\n * @param {number} n \n * @param {number} divergence \n * @returns {string}\n */\nconst petalColorFunc3 = (n, divergence) => {\n  const aDegrees = (n * divergence) % 361;\n  return `hsl(${aDegrees/2},100%,${80 - aDegrees%30}%)`;\n};\n\n/**\n * @name petalColorFunc4\n * @desc HSL `hue` value increases with age (`n`) of petal.\n * @function {FlowerPetalColorFunc}\n * @param {number} n \n * @param {number} divergence \n * @returns {string}\n */\nconst petalColorFunc4 = (n, divergence) => `hsl(${n/5 % 361},100%,50%)`;\n\n/**\n * @name petalColorFunc5\n * @desc HSL `hue` value increases with age (`n`) of petal.\n * @function {FlowerPetalColorFunc}\n * @param {number} n \n * @param {number} divergence \n * @returns {string}\n */\nconst petalColorFunc5 = (n, divergence) => `hsl(${360 - (n/5 % 361)},100%,50%)`;\n\nconst petalColorFunc6 = (n, divergence) => `hsl(${360 - (Math.random() * 360) % 361},100%,50%)`;\n\n/* PUBLIC */\n/**\n * @type {Object}\n */\nconst colorFunctions = {\n  \"adjust-rgb-red-green-blue\":  petalColorFunc1,\n  \"adjust-rgb-red-blue\":        petalColorFunc2,\n  \"increase-hue-rotation\":      petalColorFunc3,\n  \"increase-hue-each-petal\":    petalColorFunc4,\n  \"decrease-hue-each-petal\":    petalColorFunc5,\n  \"random-hue\":                 petalColorFunc6, \n};\n\n/**\n * @static colorFunctionKeys\n * @desc Returns an array of color function keys allowed by `getPetalColorFunction()`\n * @returns {string[]}\n */\nexport const colorFunctionKeys = () => Object.keys(colorFunctions);\n\n/**\n * @static getPetalColorFunction\n * @desc Public interface for color functions\n * @param {string} funcName \n * @returns {IFlowerPetalDrawFunc}\n */\nexport const getPetalColorFunction = funcName => {\n  if (colorFunctions[funcName]){\n    return colorFunctions[funcName];\n  }else{\n    throw `Unknown petal color funcName of ${funcName}`;\n  }\n};\n\n/**\n * @type {IFlowerPetalColorFunc[]}\n */\nconst weightedPetalColorFunctions = [  petalColorFunc1, petalColorFunc2, petalColorFunc3, petalColorFunc4, petalColorFunc5, ];\n\n/**\n * @static randomPetalColorFunction\n * @desc Returns a random petal color function.\n * @returns {IFlowerPetalColorFunc}\n */\nexport const randomPetalColorFunction = () => randomArrayElement(weightedPetalColorFunctions);\n\n\nlet petalIndex = 3;\n/**\n * @static getNextPetalColorFunction\n * @returns {IFlowerPetalColorFunc}\n * @desc Returns the \"next\" petal color function in `weightedPetalColorFunctions`\n */\nexport const getNextPetalColorFunction = () => {\n  petalIndex++;\n  if(petalIndex >= weightedPetalColorFunctions.length) petalIndex=0;\n  return weightedPetalColorFunctions[petalIndex];\n};","// @ts-check\n/* eslint max-params: 0 */\n\nimport \"./types/IFlowerPetalDrawFunc.js\";\nimport { randomArrayElement } from \"./utils/utils.js\";\n\n/**\n * @module petal-functions\n * @desc Functions that are used to draw flower petals. These functions conform to the FlowerPetalDrawFunc interface.\n * @author TJ\n */\n\n/* PETAL DRAWING FUNCTION DEFINITIONS */\n/**\n * @name petalFillDisc\n * @desc Draws a filled circle.\n * @function {FlowerPetalDrawFunc}\n * @prop {CanvasRenderingContext2D} ctx - drawing context where the petal will be rendered.\n * @prop {number} x - 'x' of petal.\n * @prop {number} y - 'y' of petal.\n * @prop {number} radius - 1/2 width of each petal in pixels.\n * @prop {string} color - CSS color of petal.\n */\nconst petalFillDisc = (ctx, x, y, radius, color) => {\n  ctx.save();\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, Math.PI * 2);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n/**\n * @name petalFillOval\n * @function {FlowerPetalDrawFunc}\n * @desc Draws a squashed filled circle in the provided <kbd>ctx</kbd>. The circle is centered on  <kbd>x,y</kbd>\n * @param {CanvasRenderingContext2D} ctx \n * @param {number} x \n * @param {number} y \n * @param {number} radius \n * @param {string} color \n */\nconst petalFillOval = (ctx, x, y, radius, color) => {\n  ctx.save();\n  ctx.scale(1.1, .9);\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, Math.PI * 2);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n/**\n * @name petalStrokeCircle\n * @function {FlowerPetalDrawFunc}\n * @desc strokes a circle in the provided <kbd>ctx</kbd>. The circle is centered on  <kbd>x,y</kbd>\n * @param {CanvasRenderingContext2D} ctx \n * @param {number} x \n * @param {number} y \n * @param {number} radius \n * @param {string} color \n */\nconst petalStrokeCircle = (ctx, x, y, radius, color) => {\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, Math.PI * 2);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n};\n\n/**\n * @name petalFillSquare\n * @function {FlowerPetalDrawFunc}\n * @desc fills a square in the provided <kbd>ctx</kbd>. The circle is centered on  <kbd>x,y</kbd>\n * @param {*} ctx \n * @param {*} x \n * @param {*} y \n * @param {*} radius \n * @param {*} color \n */\nconst petalFillSquare = (ctx, x, y, radius, color) => {\n  ctx.save();\n  ctx.fillStyle = color;\n  ctx.fillRect(x - radius/2, y - radius/2, radius, radius);\n  ctx.restore();\n};\n\n\n/* PUBLIC */\n/**\n * @type {Object}\n */\nconst drawFunctions = Object.freeze({\n  Circle: petalStrokeCircle,\n  Disc:   petalFillDisc,\n  Oval:   petalFillOval,\n  Square: petalFillSquare,\n});\n\n/**\n * @function drawFunctionKeys\n * @desc Returns an array of draw function keys allowed by `getPetalDrawFunction()`\n * @returns {string[]}\n */\nexport const drawFunctionKeys = () => Object.keys(drawFunctions);\n\n/**\n * @function getPetalDrawFunction\n * @desc Public interface for draw functions\n * @param {string} funcName \n * @returns {IFlowerPetalDrawFunc}\n */\nexport const getPetalDrawFunction = funcName => {\n  if (drawFunctions[funcName]){\n    return drawFunctions[funcName];\n  }else{\n    throw `Unknown petal draw funcName of ${funcName}`;\n  }\n}\n/**\n * @type {IFlowerPetalDrawFunc[]}\n */\nconst weightedFunctions = [petalFillDisc, petalFillDisc, petalFillDisc, petalStrokeCircle, petalFillSquare, petalFillOval];\n\n/**\n * @function randomPetalDrawFunction\n * @desc Returns a random petal drawing function.\n * @returns {IFlowerPetalDrawFunc}\n */\nexport const randomPetalDrawFunction = () => randomArrayElement(weightedFunctions);\n","// @ts-check\nimport appDefaults from \"./app-defaults.js\";\n\n/**\n * @module app-state\n * @description Current state variables of app. Contains `IAppState` interface and `state` object literal.\n * @author TJ\n */\n\n/**\n * @name state\n * @type {import(\"./types/IAppState\").IAppState}\n * @static\n * @desc Mutable app state variables that can change over time. Most of these could be saved to localStorage.\n */\nconst state = Object.seal({\n  clearEveryFrame:        appDefaults.uiClearEveryFrame,\n  c:                      appDefaults.uiC,\n  ctx:                    null,\n  deltaC:                 appDefaults.uiDeltaC,\n  deltaDivergence:        appDefaults.uiDeltaDivergence,\n  deltaPetalSize:         appDefaults.uiDeltaPetalSize,\n  divergence:             appDefaults.uiDivergence,\n  petalColorFunctionName: appDefaults.uiPetalColorFunctionName,\n  petalSize:              appDefaults.uiPetalSize,\n  petalStyle:             appDefaults.uiPetalDrawFunctionName,\n  flowerList:             [],\n  randomFlowers:          appDefaults.uiRandomFlowers,\n});\n\nexport default state;\n","// @ts-check\nimport { assertIsNotNull } from \"./utils/utils.js\";\nimport { fillRect } from \"./utils/utils-canvas.js\";\n\n// JSDoc interface\nimport \"./types/IUICallbacks.js\";\n\n/**\n * @function setupUI\n * @param {import(\"./types/IAppState.js\").IAppState} state \n * @param {IUICallbacks} callbacks \n */\nexport const setupUI = (defaults, state, callbacks) => {\n  const ctx = assertIsNotNull(state.ctx);\n  const canvas = ctx.canvas;\n\n  /* PRIVATE HELPER FUNCTIONS */\n  /**\n   * @function populateSelect\n   * @desc Assigns the elements of a flat array to the provided <select>\n   * @param {HTMLSelectElement} ref \n   * @param {string[] | number[]} dataArray \n   */\n  const populateSelect = (ref, dataArray) => {\n    let html = dataArray.map(val => `<option value=\"${val}\">${val}</option>`).join(\"\");\n    ref.innerHTML = html;\n  };\n\n  /**\n   * @function changePropMostRecentFlower\n   * @desc \n   * @param {string} propName\n   * @param {number|function} newPropValue\n   */\n  const changePropMostRecentFlower = (propName, newPropValue) => {\n    if(!state.flowerList.length) throw \"state.flowerList array is unexpectedly empty!\";\n    (state.flowerList[state.flowerList.length-1])[propName] = newPropValue;\n  };\n\n\n  /* INITIALIZE UI ELEMENTS */\n  // I. Buttons\n  /**\n   * @var btnRestart\n   * @type {!HTMLButtonElement}  \n   * @desc Restarts app and preserves changes user has made to UI.\n   */\n  const btnRestart = assertIsNotNull(document.querySelector(\"#btn-restart\"));\n  btnRestart.onclick = () => {\n    fillRect(ctx, 0, 0, defaults.canvasWidth, defaults.canvasHeight, \"black\");\n    callbacks.restartFunction();\n  };\n\n  /**  \n   * @var btnReset\n   * @type {!HTMLButtonElement}\n   * @desc Restarts app and resets UI to default starting state.\n   */\n  const btnReset = assertIsNotNull(document.querySelector(\"#btn-reset\"));\n  btnReset.onclick = () => callbacks.resetFunction();\n\n  /**  \n   * @var btnFS\n   * @type {!HTMLButtonElement}\n   * @desc Causes <canvas> to go into full screen mode\n   */\n  const btnFS =  assertIsNotNull(document.querySelector(\"#btn-fs\"));\n  btnFS.onclick = () => callbacks.goFullScreenFunction();\n\n\n  // II. <select> inputs\n  /**\n   * @var ctrlDivergence\n   * @type {!HTMLSelectElement}\n   * @desc Sets `state.divergence` value\n   */\n  const ctrlDivergence = assertIsNotNull(document.querySelector(\"#ctrl-divergence\"));\n\n  // Initialize state of <select>\n  populateSelect(ctrlDivergence, defaults.uiDivergenceValues);\n  ctrlDivergence.value = `${defaults.uiDivergence}`;\n\n  // Set .onchange handler\n  ctrlDivergence.onchange = () => {\n    state.divergence = +ctrlDivergence.value;\n    // change most recent flower's `.divergence` value\n    changePropMostRecentFlower(\"divergence\", state.divergence);\n  };\n\n\n  /** \n   * @var ctrlDeltaDivergence\n   * @type {!HTMLSelectElement}\n   * @desc Sets `state.deltaDivergence` value\n   */\n  const ctrlDeltaDivergence = assertIsNotNull(document.querySelector(\"#ctrl-delta-divergence\"));\n\n  // Initialize state of <select>\n  populateSelect(ctrlDeltaDivergence, defaults.uiDivergenceDeltaValues);\n  ctrlDeltaDivergence.value = `${defaults.uiDeltaDivergence}`;\n\n  // Set .onchange handler\n  ctrlDeltaDivergence.onchange = () => {\n    state.deltaDivergence = +ctrlDeltaDivergence.value;\n    // change most recent flower's `.deltaDivergence` value\n    changePropMostRecentFlower(\"deltaDivergence\", state.deltaDivergence);\n  };\n\n\n  /**\n  * @name ctrlPetalSize\n  * @type {!HTMLSelectElement}\n  * @desc Sets `state.petalSize` value\n  */\n  const ctrlPetalSize = assertIsNotNull(document.querySelector(\"#ctrl-petal-size\"));\n\n  // Initialize state of <select>\n  populateSelect(ctrlPetalSize, defaults.uiPetalSizeValues);\n  ctrlPetalSize.value = `${defaults.uiPetalSize}`;\n\n  // Set .onchange handler\n  ctrlPetalSize.onchange = () => {\n    state.petalSize = +ctrlPetalSize.value;\n    // change most recent flower's `.petalSize` value\n    changePropMostRecentFlower(\"petalSize\", state.petalSize);\n  };\n\n  \n  /** \n   * @var ctrlDeltaPetalSize\n   * @type {!HTMLSelectElement}\n   * @desc Sets `state.deltaPetalSize` value\n   */\n  const ctrlDeltaPetalSize = assertIsNotNull(document.querySelector(\"#ctrl-delta-petal-size\"));\n\n  // Initialize state of <select>\n  populateSelect(ctrlDeltaPetalSize, defaults.uiPetalSizeDeltaValues);\n  ctrlDeltaPetalSize.value = `${defaults.uiDeltaPetalSize}`;\n\n  // Set .onchange handler\n  ctrlDeltaPetalSize.onchange = () => {\n    state.deltaPetalSize = +ctrlDeltaPetalSize.value;\n    // change most recent flower's `.deltaPetalSize` value\n    changePropMostRecentFlower(\"deltaPetalSize\", state.deltaPetalSize);\n  };\n\n\n  /**\n   * @name ctrlC\n   * @type {!HTMLSelectElement}\n   * @desc Sets `state.c` (\"padding\") value\n   */\n  const ctrlC = assertIsNotNull(document.querySelector(\"#ctrl-c\"));\n\n  // Initialize state of <select>\n  populateSelect(ctrlC, defaults.uiCValues);\n  ctrlC.value = `${defaults.uiC}`;\n\n  // Set .onchange handler\n  ctrlC.onchange = () => {\n    state.c = +ctrlC.value;\n    // change most recent flower's `.c` (\"padding\") value\n    changePropMostRecentFlower(\"c\", state.c);\n  };\n\n\n  /**\n   * @var ctrlDeltaC\n   * @type {!HTMLSelectElement}\n   * @desc Sets `state.deltaC` (\"change in padding\") value\n   */\n  const ctrlDeltaC = assertIsNotNull(document.querySelector(\"#ctrl-delta-c\"));\n\n  // Initialize state of <select>\n  populateSelect(ctrlDeltaC, defaults.uiCDeltaValues);\n  ctrlDeltaC.value = `${defaults.uiDeltaC}`;\n\n  // Set .onchange handler\n  ctrlDeltaC.onchange = () => {\n    state.deltaC = +ctrlDeltaC.value;\n    // Change most recent flower's `.deltaC` value\n    //(state.flowerList?.[state.flowerList.length-1]).deltaC = state.deltaC;\n    changePropMostRecentFlower(\"deltaC\", state.deltaC);\n  };\n\n\n  /** \n   * @var ctrlPetalStyle\n   * @type {!HTMLSelectElement}\n   * @desc Sets `state.drawPetalFunction` value\n   */\n  const ctrlPetalStyle = assertIsNotNull(document.querySelector(\"#ctrl-petal-style\"));\n\n  // Initialize state of <select>\n  populateSelect(ctrlPetalStyle, defaults.uiDrawFunctionValues);\n  ctrlPetalStyle.value = `${defaults.uiPetalDrawFunctionName}`;\n\n  // Set .onchange handler\n  ctrlPetalStyle.onchange = () => {\n    state.petalStyle = ctrlPetalStyle.value;\n    // Change most recent flower's `.drawPetalFunction` value\n    changePropMostRecentFlower(\"drawPetalFunction\", callbacks.getPetalDrawFunction(state.petalStyle));\n  };\n\n\n   /** \n    * @var ctrlPetalColor\n    * @type {!HTMLSelectElement}\n    * @desc Sets `state.colorFunction` value\n    */\n   const ctrlPetalColor = assertIsNotNull(document.querySelector(\"#ctrl-petal-color\"));\n   populateSelect(ctrlPetalColor, defaults.uiColorFunctionValues);\n    ctrlPetalColor.value = `${defaults.uiPetalColorFunctionName}`;\n    ctrlPetalColor.onchange = () => {\n      state.petalColorFunctionName = ctrlPetalColor.value;\n      // Change most recent flower's .colorFunction property\n      changePropMostRecentFlower(\"colorFunction\", callbacks.getPetalColorFunction(state.petalColorFunctionName));\n    };\n\n  \n  // III. type=\"checkbox\" inputs\n  /**\n   * @var cbClearEveryFrame\n   * @type {!HTMLInputElement}\n   * @desc Checkbox for \"Clear every frame?\" user preference.\n   */\n  const cbClearEveryFrame = assertIsNotNull(document.querySelector(\"#cb-clear-every-frame\"));\n  cbClearEveryFrame.onchange = () => {\n    state.clearEveryFrame = cbClearEveryFrame.checked;\n  };\n\n  /**\n   * @var cbRandomFlowers\n   * @type {!HTMLInputElement}\n   * @desc Checkbox for \"Spawn random flowers?\" user preference.  \n   */\n  const cbRandomFlowers = assertIsNotNull(document.querySelector(\"#cb-random-flowers\"));\n  cbRandomFlowers.checked = defaults.uiRandomFlowers ? true : false;\n  cbRandomFlowers.onchange = () => state.randomFlowers = cbRandomFlowers.checked;\n\n\n  // IV. Mouse interaction\n  canvas.onclick = (e) => callbacks.canvasClickFunction(e);\n};\n\nexport default setupUI;","// @ts-check\n\n/* IMPORTS */\nimport \"../types/IFlowerParams.js\";\nimport { dtr } from \"../utils/utils.js\";\n\n/** \n * @class Flower\n * @classdesc Represents a procedurally drawn flower. \n * @prop {number} n - current petal generation.\n * @author TJ\n * */\nclass Flower{\n  /**\n   * @desc Creates an instance of Flower.\n   * @param {IFlowerParams} params\n   */\n  constructor(params){\n    //Object.assign(this, { centerX, centerY, divergence, c, petalSize, drawPetalFunction }); //:-(\n    \n    /** @type {number} */\n    this.n = 0;\n\n    // Required properies from FlowerParams\n    /** @type {number} */\n    this.centerX = params.centerX;\n\n    /** @type {number} */\n    this.centerY = params.centerY;\n\n    /** @type {number} */\n    this.divergence = params.divergence;\n\n    /** @type {number} */\n    this.c = params.c;\n\n    /** @type {number} */\n    this.petalSize = params.petalSize;\n\n    /** @type {function} */\n    this.drawPetalFunction = params.drawPetalFunction;\n  }\n\n  /**\n   * Draws the next petal.\n   * \n   * @param {CanvasRenderingContext2D} ctx - drawing context where the flower will be rendered.\n   */\n  update(ctx) {\n    const a = this.n * dtr(this.divergence);\n    const r = this.c * Math.sqrt(this.n);\n    const x = r * Math.cos(a) + this.centerX;\n    const y = r * Math.sin(a) + this.centerY;\n    const color = `hsl(${this.n/5 % 361},100%,50%)`; // 4\n    this.drawPetalFunction(ctx, x, y, this.petalSize, color);\n    this.n++;\n    this.c += .005;\n    this.petalSize += .01;\n  }\n\n};\n\nexport default Flower;\n","// @ts-check\n\n/* IMPORTS */\nimport \"../types/IFlowerParams.js\";\nimport \"../types/IFlowerPetal.js\";\nimport Flower from \"./Flower.js\";\nimport { dtr } from \"../utils/utils.js\";\n\n/** \n * @class RotatingFlower\n * @classdesc Represents a pre-rendered rotating flower.\n * @extends Flower\n * @prop {FlowerPetal[]} _petals\n * @author TJ\n * @private\n */\nclass RotatingFlower extends Flower{\n  /**\n   * @type {number}\n   */\n  static maxPetals = 50;\n  /**\n   * @desc Creates an instance of RotatingFlower\n   * @param {IFlowerParams} params \n   */\n  constructor(params){\n    super(params);\n    /** @type {IFlowerPetal[]} */\n    this._petals = [];\n\n    // Optional properties from FlowerParams, which are required for RotatingFlower\n    this.alpha = params.alpha || 1;\n    this.colorFunction = params.colorFunction || function(){}; // TODO - need a default color function here\n    //this.drawPetalFunction = ... // TODO - need assignment and default value\n    this.deltaC = params.deltaC || 0;\n    this.deltaDivergence = params.deltaDivergence || 0;\n    this.deltaPetalSize = params.deltaPetalSize || 0;\n    this.deltaRotation = params.deltaRotation || 0;\n    this.rotation = params.rotation || 0;\n  }\n\n  /**\n   * Draws the next petal.\n   * @param {CanvasRenderingContext2D} ctx - drawing context where the flower will be rendered.\n   */\n  update(ctx) {\n    const a = this.n * dtr(this.divergence);\n    const r = this.c * Math.sqrt(this.n);\n    const x = r * Math.cos(a);// + this.centerX;\n    const y = r * Math.sin(a); //+ this.centerY;\n    //const color = `hsl(${this.n/5 % 361},100%,50%)`; // 4\n\n    const color = this.colorFunction(this.n, this.divergence);\n    // If there's room, create a new petal\n    if(this._petals.length < RotatingFlower.maxPetals){\n      this._petals.push({x, y, color, petalSize: this.petalSize});\n    }\n\n    // Draw all petals\n    ctx.save()\n    ctx.globalAlpha = this.alpha;\n    ctx.translate(this.centerX, this.centerY);\n    ctx.rotate(this.rotation);\n    for(let p of this._petals){\n        // let aDegrees = (n * divergence) % 256; // 2\n    // let color = `rgb(${aDegrees},0,255)`;\n      this.drawPetalFunction(ctx, p.x, p.y, this.petalSize, p.color);\n    }\n    ctx.restore();\n\n    this.n++;\n    this.c += this.deltaC;\n    this.divergence += this.deltaDivergence;\n    this.petalSize += this.deltaPetalSize;\n    this.rotation += this.deltaRotation;\n  \n  }\n}\n\nexport default RotatingFlower;\n","// @ts-check\n/**\n * @name IAppDefaults\n * @desc JSDoc type definition.\n * @author TJ\n * @typedef {Object} IAppDefaults\n * @prop {number} canvasWidth - width of canvas in pixels.\n * @prop {number} canvasHeight - height of canvas in pixels.\n * @prop {string} clearColor - CSS color to fill background with.\n * @prop {number} deltaRotation - `rotation` delta per frame.\n * @prop {number} fps - target frames-per-second of animation loop.\n * @prop {number} maxFlowers - maximum number of flowers to render.\n * @prop {number} maxPetals - maximum number of petals each flower will contain.\n * @prop {number} minFlowerOpacity - minimum opacity of randomly generated flowers.\n * @prop {number[]} randomDivergenceValues - an array of divergence values.\n * @prop {number} randomFlowerDelay - time between randomly spawned flowers in milliseconds.\n * @prop {number} randomFlowerPadding - offset in pixels of randomly spawned flowers.\n * @prop {number} uiC - padding between petals in pixels.\n * @prop {number[]} uiCDeltaValues\n * @prop {boolean} uiClearEveryFrame - Clear screen every frame?\n * @prop {string[]} uiColorFunctionValues\n * @prop {number[]} uiCValues\n * @prop {number} uiDeltaC - `c` delta per frame.\n * @prop {number} uiDeltaDivergence - `divergence` delta per frame.\n * @prop {number} uiDeltaPetalSize - `petalSize` delta per frame.\n * @prop {number} uiDivergence - degrees of rotation per frame.\n * @prop {number[]} uiDivergenceDeltaValues\n * @prop {number[]} uiDivergenceValues\n * @prop {string[]} uiDrawFunctionValues\n * @prop {string} uiPetalColorFunctionName - name of color function used for petals. \n * @prop {string} uiPetalDrawFunctionName - drawing function used for petals. \n * @prop {number} uiPetalSize - radius of petals in pixels.\n * @prop {number[]} uiPetalSizeDeltaValues \n * @prop {number[]} uiPetalSizeValues\n * @prop {boolean} uiRandomFlowers - periodically display random flowers?\n */\n","// @ts-check\n/**\n * @name IFlowerParams\n * @desc JSDoc type definition. These are also properties of the Flower class.\n * @author TJ\n * @typedef {Object} IFlowerParams\n * @prop {number} c - spacing between petals.\n * @prop {number} centerX - center `x` of Flower around which petals are drawn.\n * @prop {number} centerY - center `y` of Flower around which petals are drawn.\n * @prop {number} divergence - rotation (in radians) between successive petals.\n * @prop {number} petalSize - width of each petal in pixels.\n * @prop {Function} drawPetalFunction - function that draws petals.\n * @prop {number} [alpha=1] - opacity of entire flower\n * @prop {Function} [colorFunction=0] - function used to determine color of petal.\n * @prop {number} [deltaRotation=0] - `rotation` delta per frame.\n * @prop {number} [deltaC=0] - `c` delta per frame.\n * @prop {number} [deltaDivergence=0] - `divergence` delta per frame.\n * @prop {number} [deltaPetalSize=0] - `petalSize` delta per frame.\n * @prop {number} [rotation=0] - rotation of flower in radians.\n */\n","// @ts-check\n/**\n * @name IFlowerPetal\n * @desc JSDoc type definition\n * @author TJ\n * @typedef {Object} IFlowerPetal\n * @prop {number} x - 'x' of petal.\n * @prop {number} y - 'y' of petal.\n * @prop {number} petalSize - width of each petal in pixels.\n * @prop {string} color - CSS color of petal.\n */\n","// @ts-check\n/**\n * @name IFlowerPetalDrawFunc\n * @desc JSDoc type definition\n * @author TJ\n * @typedef {Function} IFlowerPetalDrawFunc\n * @prop {CanvasRenderingContext2D} ctx - drawing context where the petal will be rendered.\n * @prop {number} x - 'x' of petal.\n * @prop {number} y - 'y' of petal.\n * @prop {number} radius - 1/2 width of each petal in pixels.\n * @prop {string} color - CSS color of petal.\n */\n","// @ts-check\n/**\n * @name IPoint\n * @desc JSDoc type definition.\n * @author TJ\n * @typedef {Object} IPoint\n * @property {number} x \n * @property {number} y\n */\n","// @ts-check\n/**\n * @name IUICallbacks\n * @desc JSDoc type definition.\n * @author TJ\n * @typedef {Object} IUICallbacks\n * @property {function} canvasClickFunction\n * @property {function} getPetalDrawFunction\n * @property {function} getPetalColorFunction\n * @property {function} goFullScreenFunction\n * @property {function} resetFunction\n * @property {function} restartFunction\n */","// @ts-check\n/* eslint function-call-argument-newline: 0 */\n/* eslint id-length: 0 */\n/* eslint max-params: 0 */\n/* eslint no-magic-numbers: 1 */\n/* eslint one-var: 0 */\n/* eslint padded-blocks: 0 */\n\n/**\n * @module utils-canvas\n * @desc Utility functions\n * @author TJ\n */\n\n/**\n * @function fillCircle\n * @static\n * @desc Fills a circle in the provided <kbd>ctx</kbd>.\n * The circle is centered on  <kbd>x,y</kbd>\n * @param {CanvasRenderingContext2D} ctx\n * @param {number} x\n * @param {number} y\n * @param {number} radius\n * @param {string} color\n */\nexport const fillCircle = (ctx, x, y, radius, color) => {\n  ctx.save();\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, Math.PI * 2);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n/**\n * @function fillRect\n * @static\n * @desc Fills a rectangle in the provided <kbd>ctx</kbd>.\n * The rectangle's upper-left corner begins at <kbd>x,y</kbd>\n * @param {CanvasRenderingContext2D} ctx\n * @param {number} x\n * @param {number} y\n * @param {number} width\n * @param {number} height\n * @param {string} color\n */\nexport const fillRect = (ctx, x, y, width, height, color) => {\n  ctx.save();\n  ctx.fillStyle = color;\n  ctx.fillRect(x, y, width, height);\n  ctx.restore();\n};\n","// @ts-check\n/* eslint max-params: 0 */\n\nimport \"../types/IPoint.js\";\n\n/**\n * @module utils\n * @desc Utility functions\n * @author TJ\n */\n\n /**\n * @function assertNonNull\n * @static\n * @author https://docs.joshuatz.com/cheatsheets/js/jsdoc/\n * @desc Utility function because we can't use a TS-style post-fix assert (yet) in JSDoc\n *  - Takes any union type and excludes `null`\n * @template T\n * @param {T} thing - any union type\n * @returns {Exclude<T, null>}\n */\n export const assertNonNull = thing => {\n\treturn /** @type {Exclude<T, null>} */ (thing);\n}\n\n/**\n * @name assertIsNonNull\n * @author https://stackoverflow.com/questions/74383150/jsdoc-non-null-assertion\n * In lieu of writing in TypeScript and having the convenient non-null assertion\n * operator (!), this helper function allows asserting that something is not\n * null or undefined without having to write a JSDoc type cast that has to\n * explicitly know the non-null type (which is error prone).\n * @template {any} T\n * @param {T} item\n */\nexport const assertIsNotNull = (item) => {\n  if (item === null || item === undefined) throw 'item is null or undefined';\n  return item;\n};\n\n/**\n * @function dtr\n * @static\n * @desc Converts degree values to radians.\n * @param {number} degrees - The value in degrees.\n * @returns {number} The value in radians.\n */\nexport const dtr = degrees => degrees * (Math.PI/180);\n\n/**\n * @function randomArrayElement\n * @static\n * @param {any[]} arr \n * @returns {any}\n */\nexport const randomArrayElement = arr => arr[Math.floor(Math.random() * arr.length)];\n\n/**\n * @function randomNumber\n * @static\n * @param {number} min \n * @param {number} max \n * @returns {number}\n */\nexport const randomNumber = (min, max) => Math.random() * (max - min) + min;\n\n/**\n * @function getXY\n * @static\n * @param {!MouseEvent} evt\n * @returns {IPoint}\n */\nexport const getXY = evt =>  {\n  const x = evt.offsetX;\n  const y = evt.offsetY;\n  return {x, y};\n};\n\n/**\n * @function goFullScreen\n * @static\n * @param {HTMLElement} element\n */\nexport const goFullScreen = element => element.requestFullscreen();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//@ts-check\n/*global window, document*/\n\n/**\n * @module main\n * @description Main module of the application.\n * @author TJ\n */\n\n/* IMPORTS */\nimport appDefaults from \"./app-defaults.js\";\nimport { getPetalColorFunction, getNextPetalColorFunction, randomPetalColorFunction } from \"./app-petal-color-functions.js\";\nimport { getPetalDrawFunction, randomPetalDrawFunction } from \"./app-petal-draw-functions.js\";\nimport state from \"./app-state.js\";\nimport setupUI from \"./app-ui.js\";\nimport { assertIsNotNull, getXY, goFullScreen, randomArrayElement, randomNumber } from \"./utils/utils.js\";\nimport RotatingFlower from \"./classes/RotatingFlower.js\";\nimport { fillRect } from \"./utils/utils-canvas.js\";\n\n/* METHODS */\n/**\n * @name addFlowerToList\n * @desc Adds a new flower to the end of the list.\n * @param {RotatingFlower} flower\n */\nconst addFlowerToList = flower => {\n  // if too many flowers, remove oldest one\n  if(state.flowerList.length > appDefaults.maxFlowers-1){\n    state.flowerList.shift();\n  }\n  // add new flower to end of list\n  state.flowerList.push(flower);\n\n  // adjust .alpha of all flowers, decreasing top to bottom\n  let newAlpha = .9\n  for (let i = state.flowerList.length-1; i>=0; i--){\n    const flower = state.flowerList[i];\n    newAlpha = newAlpha < appDefaults.minFlowerOpacity ? appDefaults.minFlowerOpacity : newAlpha;\n    flower.alpha = newAlpha;\n    newAlpha -= .1;\n  }\n\n}\n\n/**\n * @name createFlowerWithCurrentUISettings\n * @desc Instantiates a new flower using current UI values.\n * @param {number} x \n * @param {number} y \n * @returns {RotatingFlower}\n */\nconst createFlowerWithCurrentUISettings = (x, y) =>{\n  // params for new RotatingFlower\n   /** @type {IFlowerParams} */\n   const params =  {\n    c: state.c,\n    centerX: x, \n    centerY: y, \n    colorFunction: getPetalColorFunction(state.petalColorFunctionName),\n    deltaC: state.deltaC,\n    deltaDivergence: state.deltaDivergence,\n    deltaPetalSize: state.deltaPetalSize,\n    deltaRotation: appDefaults.deltaRotation,\n    divergence: state.divergence, \n    drawPetalFunction: getPetalDrawFunction(state.petalStyle),\n    petalSize: state.petalSize, \n  };\n  return new RotatingFlower(params);\n}\n\n/**\n * @name createRandomFlower\n * @desc Instantiates a new flower using random values.\n * @param {number} x - the `x` position of the new flower\n * @param {number} y - the `y` position of the new flower\n * @returns {RotatingFlower}\n */\nconst createRandomFlower = (x, y) => {\n    /** @type {IFlowerParams} */\n    const params =  {\n      c: randomNumber(2, 6),\n      centerX: x, \n      centerY: y, \n      colorFunction: getNextPetalColorFunction(),\n      deltaC: randomNumber(.002, .01),\n      deltaDivergence: Math.random() < 0 ? 0 : randomNumber(-.005,.005),\n      deltaPetalSize: randomNumber(0, .04),\n      deltaRotation: Math.random() < .5 ? randomNumber(-.002, -.02) : randomNumber(.002, .02),\n      divergence: randomArrayElement(appDefaults.randomDivergenceValues), \n      drawPetalFunction: randomPetalDrawFunction(),\n      petalSize: randomNumber(1, 5), \n    };\n    return new RotatingFlower(params);\n};\n\n/**\n * @name initFlowerSprites\n * @desc instantiates initial flower using defaults and adds it to flowers list.\n */\nconst initFlowerSprites = () => {\n  // clear list\n  state.flowerList.length = 0;\n  // add flower to list\n  addFlowerToList(createFlowerWithCurrentUISettings(appDefaults.canvasWidth/2, appDefaults.canvasHeight/2));\n};\n\n/**\n * Called every frame\n * @param {CanvasRenderingContext2D} ctx \n */\nconst loop = (ctx) => {\n  window.setTimeout(() => loop(ctx), 1000/appDefaults.fps);\n  if(state.clearEveryFrame){\n    fillRect(ctx, 0, 0, appDefaults.canvasWidth, appDefaults.canvasHeight, appDefaults.clearColor);\n  }\n  for(const f of state.flowerList){\n    f.update(ctx);\n  }\n};\n\n/**\n * @name init\n * @desc Handles app initialization.\n */\nconst init = () => {\n  // I. Setup canvas & drawing context\n  // get ref to <canvas>\n  /** @type {HTMLCanvasElement} */\n  const canvas = assertIsNotNull(document.querySelector(\"#canvas\"));\n\n  // create drawing context and assign to `state.ctx` property\n  state.ctx = assertIsNotNull(canvas.getContext(\"2d\"));\n\n  // seal `state` object - no new properties\n  Object.seal(state);\n\n  // set width and height of canvas\n  canvas.width = appDefaults.canvasWidth;\n  canvas.height = appDefaults.canvasHeight;\n\n  // fill canvas with default clear color\n  fillRect(state.ctx, 0, 0, appDefaults.canvasWidth, appDefaults.canvasHeight, appDefaults.clearColor);\n\n\n  // II. setup UI\n  /**\n   * @name canvasClickFunction\n   * @param {MouseEvent} e \n   */\n  const canvasClickFunction = e => {\n    /** @type {IPoint} */\n    const loc = getXY(e);\n    addFlowerToList(createFlowerWithCurrentUISettings(loc.x, loc.y));\n  }\n\n  /**\n   * @name uiCallbacks\n   * @type {IUICallbacks}\n   */\n  const uiCallbacks = {\n    canvasClickFunction: canvasClickFunction,\n    getPetalDrawFunction: getPetalDrawFunction,\n    getPetalColorFunction: getPetalColorFunction,\n    goFullScreenFunction: () => goFullScreen(canvas),\n    resetFunction: () => window.location.reload(),\n    restartFunction: initFlowerSprites,\n  };\n  setupUI(appDefaults, state, uiCallbacks);\n\n\n  // III. Set up flower sprites\n  RotatingFlower.maxPetals = appDefaults.maxPetals;\n\n  // Interval to create random flowers\n  setInterval(() => {\n    if(state.randomFlowers){\n      const padding = appDefaults.randomFlowerPadding;\n      const x = randomNumber(padding, appDefaults.canvasWidth-padding);\n      const y = randomNumber(padding, appDefaults.canvasHeight-padding);\n      addFlowerToList(createRandomFlower(x, y));\n    }\n  }, appDefaults.randomFlowerDelay);\n\n  // initialize starting flower\n  initFlowerSprites();\n\n  // IV. start up app\n  loop(state.ctx);\n};\n\ninit();\n"],"names":["colorFunctionKeys","drawFunctionKeys","appDefaults","Object","freeze","canvasWidth","canvasHeight","clearColor","deltaRotation","fps","maxFlowers","maxPetals","minFlowerOpacity","randomDivergenceValues","randomFlowerDelay","randomFlowerPadding","uiC","uiCDeltaValues","uiClearEveryFrame","uiColorFunctionValues","uiCValues","uiDeltaC","uiDeltaDivergence","uiDeltaPetalSize","uiDivergence","uiDivergenceDeltaValues","uiDivergenceValues","uiDrawFunctionValues","uiPetalColorFunctionName","uiPetalSize","uiPetalSizeDeltaValues","uiPetalSizeValues","uiPetalDrawFunctionName","uiRandomFlowers","randomArrayElement","petalColorFunc1","n","divergence","concat","petalColorFunc2","aDegrees","petalColorFunc3","petalColorFunc4","petalColorFunc5","petalColorFunc6","Math","random","colorFunctions","keys","getPetalColorFunction","funcName","weightedPetalColorFunctions","randomPetalColorFunction","petalIndex","getNextPetalColorFunction","length","petalFillDisc","ctx","x","y","radius","color","save","fillStyle","beginPath","arc","PI","closePath","fill","restore","petalFillOval","scale","petalStrokeCircle","strokeStyle","stroke","petalFillSquare","fillRect","drawFunctions","Circle","Disc","Oval","Square","getPetalDrawFunction","weightedFunctions","randomPetalDrawFunction","state","seal","clearEveryFrame","c","deltaC","deltaDivergence","deltaPetalSize","petalColorFunctionName","petalSize","petalStyle","flowerList","randomFlowers","assertIsNotNull","setupUI","defaults","callbacks","canvas","populateSelect","ref","dataArray","html","map","val","join","innerHTML","changePropMostRecentFlower","propName","newPropValue","btnRestart","document","querySelector","onclick","restartFunction","btnReset","resetFunction","btnFS","goFullScreenFunction","ctrlDivergence","value","onchange","ctrlDeltaDivergence","ctrlPetalSize","ctrlDeltaPetalSize","ctrlC","ctrlDeltaC","ctrlPetalStyle","ctrlPetalColor","cbClearEveryFrame","checked","cbRandomFlowers","e","canvasClickFunction","dtr","Flower","params","_classCallCheck","centerX","centerY","drawPetalFunction","_createClass","key","update","a","r","sqrt","cos","sin","RotatingFlower","_Flower","_this","_callSuper","_petals","alpha","colorFunction","rotation","_inherits","push","globalAlpha","translate","rotate","_iterator","_createForOfIteratorHelper","_step","s","done","p","err","f","_defineProperty","fillCircle","width","height","assertNonNull","thing","item","undefined","degrees","arr","floor","randomNumber","min","max","getXY","evt","offsetX","offsetY","goFullScreen","element","requestFullscreen","addFlowerToList","flower","shift","newAlpha","i","createFlowerWithCurrentUISettings","createRandomFlower","initFlowerSprites","loop","window","setTimeout","init","getContext","loc","uiCallbacks","location","reload","setInterval","padding"],"sourceRoot":""}